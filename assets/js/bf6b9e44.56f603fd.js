"use strict";(self.webpackChunkcanvas_docs=self.webpackChunkcanvas_docs||[]).push([[629],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=s,g=d["".concat(c,".").concat(u)]||d[u]||m[u]||a;return n?r.createElement(g,o(o({ref:t},l),{},{components:n})):r.createElement(g,o({ref:t},l))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6989:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),s=(n(7294),n(3905));const a={sidebar_position:5},o="Custom Data Formats",i={unversionedId:"custom",id:"custom",title:"Custom Data Formats",description:"We provide a set of default data formats for submitting",source:"@site/docs/custom.md",sourceDirName:".",slug:"/custom",permalink:"/docs/custom",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"sidebar",previous:{title:"Basic Data Formats",permalink:"/docs/formats"},next:{title:"Canvas React Hooks",permalink:"/docs/canvas/packages/hooks/"}},c={},p=[],l={toc:p};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"custom-data-formats"},"Custom Data Formats"),(0,s.kt)("p",null,"We provide a set of ",(0,s.kt)("a",{parentName:"p",href:"./formats"},"default data formats")," for submitting\nsigned data, but some applications may wish to use their own formats\nfor signing and verifying messages."),(0,s.kt)("p",null,"We provide a way to write custom actions to support this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'export const actions = {\n    doThing: customAction({\n        "$id": "https://example.com/string",\n        "$schema": "https://json-schema.org/draft/2020-12/schema",\n        "type": "object",\n        "properties": {\n            "one": { "type": "string" },\n            "two": { "type": "string" }\n        }\n    }, ({ one, two }, { db, hash }) => {\n        db.things.set(hash, { one, two });\n    })\n}\n')),(0,s.kt)("p",null,"This code above allows any unsigned message that matches the ",(0,s.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSON\nSchema")," to be gossipped and relayed over the\nnetwork."),(0,s.kt)("p",null,"For most cases, you should also enforce some level of signature\nverification."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'export const actions = {\n    doSignedThing: customAction({\n        "$id": "https://example.com/string",\n        "$schema": "https://json-schema.org/draft/2020-12/schema",\n        "type": "object",\n        "properties": {\n            "signature": { "type": "string" },\n            "signingAddress": { "type": "string" },\n            "message": { "type": "string" }\n        }\n    }, ({ signature, signingAddress, message }, {db, hash}) => {\n        const domain = {\n            name: "TestApp"\n        };\n        const fields = {\n            Message: [\n                { name: "message", type: "string" },\n                { name: "signingAddress", type: "string" }\n            ]\n        };\n        const value = { signingAddress, message };\n        const recoveredAddress = verifyTypedData(domain, fields, value, signature)\n        if(recoveredAddress == signingAddress) {\n            // signature is valid, perform action\n            db.things.set(hash, { message });\n        } else {\n            // signature is invalid\n            return false;\n        }\n    })\n};\n')),(0,s.kt)("p",null,"Note that customAction() and verifyTypedData() are provided as globals in the VM."))}m.isMDXComponent=!0}}]);