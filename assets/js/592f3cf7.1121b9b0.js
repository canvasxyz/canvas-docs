"use strict";(self.webpackChunkcanvas_docs=self.webpackChunkcanvas_docs||[]).push([[435],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5711:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},l="@canvas-js/core",o={unversionedId:"canvas/packages/core/README",id:"canvas/packages/core/README",title:"@canvas-js/core",description:"\u26a0\ufe0f In most cases, you want to use the Canvas CLI or the hub to run apps. @canvas-js/core is an internal component for embedded use cases.",source:"@site/docs/canvas/packages/core/README.md",sourceDirName:"canvas/packages/core",slug:"/canvas/packages/core/",permalink:"/docs/canvas/packages/core/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Canvas Command Line",permalink:"/docs/canvas/packages/cli/"},next:{title:"@canvas-js/interfaces",permalink:"/docs/canvas/packages/interfaces/"}},s={},p=[{value:"Initializing a core",id:"initializing-a-core",level:3},{value:"Development",id:"development",level:2},{value:"Testing",id:"testing",level:2},{value:"API",id:"api",level:2},{value:"Metrics",id:"metrics",level:2},{value:"<code>canvas_sync_time</code>",id:"canvas_sync_time",level:3},{value:"<code>canvas_messages</code>",id:"canvas_messages",level:3},{value:"<code>canvas_gossipsub_subscribers</code>",id:"canvas_gossipsub_subscribers",level:3},{value:"<code>canvas_sync_peers</code>",id:"canvas_sync_peers",level:3}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"canvas-jscore"},"@canvas-js/core"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f In most cases, you want to use the Canvas CLI or the ",(0,r.kt)("a",{parentName:"p",href:"https://canvas-hub.fly.dev/"},"hub")," to run apps. ",(0,r.kt)("inlineCode",{parentName:"p"},"@canvas-js/core")," is an internal component for embedded use cases.")),(0,r.kt)("p",null,"The Canvas core verifies, executes, and stores the effects of signed messages.\nMost developers should not use the core directly, but instead should use the Canvas CLI or Hub,\nwhich will automatically set up and manage cores and their dependencies."),(0,r.kt)("h3",{id:"initializing-a-core"},"Initializing a core"),(0,r.kt)("p",null,"To initialize an Canvas core, import ",(0,r.kt)("inlineCode",{parentName:"p"},"@canvas-js/core")," and call ",(0,r.kt)("inlineCode",{parentName:"p"},"Core.initialize({})")," with the appropriate arguments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Core } from "@canvas-js/core"\n\nconst spec = `\n  const models = { }\n  const routes = { }\n  const actions = { }\n`\n\nconst core = await Core.initialize({\n    spec,\n    directory: "/path/to/app/directory", // or `null` to run entirely in-memory\n    unchecked: true,\n})\n\nconsole.log(core.app) // ipfs://Qm...\n')),(0,r.kt)("p",null,"Applications are identified by the ",(0,r.kt)("inlineCode",{parentName:"p"},"core.app")," IPFS URI. Sessions and actions must be signed for the core's app URI."),(0,r.kt)("h2",{id:"development"},"Development"),(0,r.kt)("p",null,"Regenerate the RPC protobuf message types with ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run generate-rpc"),"."),(0,r.kt)("p",null,"The package should be built with typescript in composite build mode from the repo root, not from the package directory here."),(0,r.kt)("h2",{id:"testing"},"Testing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm run test\n")),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { CID } from "multiformats/cid"\nimport { Libp2p } from "libp2p"\n\nimport { Message, ModelValue, Model, Chain, ChainId, ApplicationData } from "@canvas-js/interfaces"\n\ndeclare interface CoreOptions {\n    unchecked?: boolean\n    verbose?: boolean\n    offline?: boolean\n    replay?: boolean\n}\n\ndeclare interface CoreConfig extends CoreOptions {\n    // pass `null` to run in memory (NodeJS only)\n    directory: string | null\n    spec: string\n\n    uri?: string // set a custom app URI (defaults to ipfs:// of spec)\n    chains?: ChainImplementation<unknown, unknown>[]\n    listen?: number\n    announce?: string[]\n    bootstrapList?: string[]\n}\n\ndeclare class Core extends EventEmitter<CoreEvents> implements CoreAPI {\n    public static initialize(config: CoreConfig): Promise<Core>\n\n    public readonly app: string\n    public readonly cid: CID\n    public readonly directory: string | null\n    public readonly libp2p: Libp2p | null // null if config.offline = true\n\n    public close(): Promise<void>\n    public apply(message: Message): Promise<{ hash: string }>\n    public getRoute(route: string, params: Record<string, string>): Promise<Record<string, ModelValue>[]>\n    public getApplicationData(): Promise<ApplicationData> // general app metadata and network/peering status\n}\n')),(0,r.kt)("h2",{id:"metrics"},"Metrics"),(0,r.kt)("h3",{id:"canvas_sync_time"},(0,r.kt)("inlineCode",{parentName:"h3"},"canvas_sync_time")),(0,r.kt)("p",null,"A histogram of MST sync times."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"label name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uri")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"the source ",(0,r.kt)("inlineCode",{parentName:"td"},"ipfs://")," URI")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"status")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"either ",(0,r.kt)("inlineCode",{parentName:"td"},'"success"')," or ",(0,r.kt)("inlineCode",{parentName:"td"},'"failure"'))))),(0,r.kt)("h3",{id:"canvas_messages"},(0,r.kt)("inlineCode",{parentName:"h3"},"canvas_messages")),(0,r.kt)("p",null,"A counter of messages applied"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"label name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"either ",(0,r.kt)("inlineCode",{parentName:"td"},'"action"')," or ",(0,r.kt)("inlineCode",{parentName:"td"},'"session"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uri")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"the source ",(0,r.kt)("inlineCode",{parentName:"td"},"ipfs://")," URI")))),(0,r.kt)("h3",{id:"canvas_gossipsub_subscribers"},(0,r.kt)("inlineCode",{parentName:"h3"},"canvas_gossipsub_subscribers")),(0,r.kt)("p",null,"A gauge counting GossipSub topic subscribers."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"label name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uri")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"the source ",(0,r.kt)("inlineCode",{parentName:"td"},"ipfs://")," URI")))),(0,r.kt)("h3",{id:"canvas_sync_peers"},(0,r.kt)("inlineCode",{parentName:"h3"},"canvas_sync_peers")),(0,r.kt)("p",null,"A gauge counting the observed active DHT application peers."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"label name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uri")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"the source ",(0,r.kt)("inlineCode",{parentName:"td"},"ipfs://")," URI")))))}d.isMDXComponent=!0}}]);